generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  username String
  email    String @unique
  password String
  role     Role   @default(User)
  Otp      Otp[]
}

model Otp {
  id         String   @id @default(uuid())
  user       User     @relation(fields: [user_id], references: [id])
  user_id    String
  otp_val    Int
  created_at DateTime @default(now())
  expires_at DateTime @default(dbgenerated("NOW() + interval '10 minute'"))
}

enum Role {
  User
  Admin
}

model ProductRequest {
  id                String   @id @default(uuid())
  userId            String
  productId         String
  requestedQuantity Int
  product           Product  @relation(fields: [productId], references: [id])
  quantityId        String
  color             String
  price             Float
  size              String
  firstname         String
  phoneNumber       String
  province          String
  userEmail         String
  zipcode           String
  lastname          String
  status            Status   @default(Pending)
  requestedAt       DateTime @default(now())
  cartId            String
}

enum Availability {
  InStock
  OutOfStock
  Freezed
}

enum Status {
  Pending
  Success
  Rejected
}

model Product {
  id             String           @id @default(uuid())
  name           String
  description    String
  imageUrl       String
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  ratingId       String           @unique
  tags           String[]
  category       Category[]
  rating         Rating           @relation(fields: [ratingId], references: [id])
  quantity       Qunatity[]
  ProductRequest ProductRequest[]
}

model Category {
  id        String   @id @default(uuid())
  name      String   @default("general")
  productId String?
  Product   Product? @relation(fields: [productId], references: [id])
}

model Rating {
  id      String   @id @default(uuid())
  rating  Float    @default(0)
  Product Product?
}

model Qunatity {
  id        String       @id @default(uuid())
  total     Int
  productId String?
  color     String?
  size      String
  price     Float?
  status    Availability @default(InStock)
  Product   Product?     @relation(fields: [productId], references: [id])
}
